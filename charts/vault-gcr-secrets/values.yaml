# Values for vault-gcr-secrets

replicaCount: 1
deploymentStrategy: {}

image:
  repository: quay.io/tommydavita/vault-gcr-secrets
  tag: v0.1.5
  pullPolicy: IfNotPresent
  volumeMounts: []
    # - name: ca
    #   mountPath: "/etc/vault-gcr-secrets"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

environmentVars: []
  # Set environment variables from a secret. This must be done, if you use the
  # Token or AppRole Auth Methods of Vault.

  # Token auth method:
  # - name: VAULT_TOKEN
  #   valueFrom:
  #     secretKeyRef:
  #       name: vault-gcr-secrets
  #       key: VAULT_TOKEN
  # - name: VAULT_TOKEN_LEASE_DURATION
  #   value: "300"
  # - name: VAULT_CACERT
  #   value: "/etc/vault-gcr-secrets/ca.pem"
  # - name: VAULT_TOKEN_RENEWAL_INTERVAL
  #   value: "43200"
  # - name: VAULT_TOKEN_RENEWAL_RETRY_INTERVAL
  #   value: "30"

  # AppRole auth method:
  # - name: VAULT_ROLE_ID
  #   valueFrom:
  #     secretKeyRef:
  #       name: vault-gcr-secrets
  #       key: VAULT_ROLE_ID
  # - name: VAULT_SECRET_ID
  #   valueFrom:
  #     secretKeyRef:
  #       name: vault-gcr-secrets
  #       key: VAULT_SECRET_ID
  # - name: VAULT_TOKEN_RENEWAL_RETRY_INTERVAL
  #   value: "30"
  # - name: VAULT_TOKEN_MAX_TTL
  #   value: "43200"

# Set the address for vault (by default we assume you are running a dev
# instance of vault in the same namespace as the operator) and specify the
# authentication method for the operator.  Possible values are 'token',
# 'kubernetes', or 'approle'.

# If the authentication method is 'kubernetes' the Helm chart
# ensures that the Service Account included the needed rights. The default path
# for the Kubernets Auth method is 'auth/kubernetes', if you enabled it under
# another path you must change the 'kubernetesPath' value. You must also
# provide the role which should be used for the authentication.
#
# If the auth method is 'token' you can specify the 'tokenPath' to read the
# Vault token from a mounted volume instead of an environment variable.
#
# If the auth method is 'approle' you must specify a path for the AppRole Auth
# method with 'authMountPath', by default it is 'auth/approle'. Also
# 'VAULT_ROLE_ID' and 'VAULT_SECRET_ID' must be set for this auth method. With
# this method, the renewal interval is set by default to a half of the token
# lease duration (can be overwritten with 'VAULT_TOKEN_RENEWAL_INTERVAL'), the
# token maximum TTL is set by default to 1382400 seconds (16 days, can be
# overwritten with 'VAULT_TOKEN_MAX_TTL').
#
vault:
  ## Vault Address, eg: http://localhost:8200
  address: ""

  ## number of retries before exiting in error (this helps prevent running out of leases)
  numRetries: 3

  ## Vault authMethod (currently supported values are `appRole` or `kubernetes` (maybe `token`))
  authMethod: token
  # If null, defaults to `auth/authMethod`
  authMountPath: ~

  credentialSecretName: ~
  tokenPath: ""
  kubernetesRole: vault-gcr-secrets
  gcpSecretPath: gcp/gcr-role

## K8s Destination Secret
secret:
  # Resulting name of the kubernetes secret
  name: gcr-secret

  # Secret Type
  type: kubernetes.io/dockerconfigjson

  ## what values to pull from the vault secret (inside with secret <gcpSecretPath>)
  template: base64Decode .Data.private_key_data

  ## Set a custom template command. The template output will be written to /dev/shm/key.json
  # customTemplateCommand: |
  #   kubectl create secret {{ .Values.secret.type }} "{{ .Values.secret.name }}" --from-file={{ .Values.secret.key }}=/dev/shm/key.json --dry-run=client -o yaml | kubectl apply -f -
  #   kubectl describe secret {{ .Values.secret.name }}

  ## For docker-registry secret.type, these parameters will be used
  dockerServer: gcr.io
  dockerUsername: _json_key
  dockerEmail: not.used@example.com

rbac:
  create: true
  createrole: true

serviceAccount:
  create: true
  name: vault-gcr-secrets

# Annotations for vault-gcr-secrets pod(s).
podAnnotations: {}

# Additional labels for the vault-gcr-secrets pod(s).
podLabels: {}

podSecurityContext: {}

securityContext: {}

# Annotations for the vault-gcr-secrets-test-connection pod
testPodAnnotations: {}

# Additional labels for the vault-gcr-secrets-test-connection pod
testPodLabels: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

volumes: []
  # - name: ca
  #   secret:
  #     secretName: vault-gcr-secrets-ca
  #     items:
  #       - key: ca.pem
  #         path: ca.pem

nodeSelector: {}

tolerations: []

affinity: {}
